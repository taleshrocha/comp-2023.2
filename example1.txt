{CONSTS}
const const1 := 1;
const const2 := 2;

{TYPES}
type type1 := bool;
type type2 := int;
type type3 := array[0..99] of bool;
type type4 := type1;
type type5 := type4;

{VARIABLES}

var globalVar1 : bool;
var globalVar2 : int;
var globalVar3 : type3;
var globalVar4 : type1;
var globalVar5 : record 
  a : int;
  b : bool;
end;
var globalVar6 : real;
var globalVar7 : char;
var globalVar8 : type3;


{FUNCTIONS AND PROCEDURES}


procedure procedure1 (par1 : bool, par2 : int) 
begin 
  var var1 : bool;
  var var2 : int;
  globalVar1 := true;
  if var1 == true then 
  begin
    var1 := false
  end
end;

function function1 (par1 : bool, par2 : bool) : bool
begin
  return par1 == par2
end;

procedure main ()
begin
  globalVar3[2] := 3;
  globalVar5.b := false;
  procedure1(false, globalVar5.a);
  
  begin
    var localVar : int;
    localVar := 3;
    if 2 > 3 then 
      begin
        procedure1(false, globalVar2)
      end 
    else
      begin
        for globalVar5.a := 0 to 10 step 1
        begin
          globalVar2 := globalVar2 + 1
        end
      end
  end;

  loop 
    var test1 : int;
    test1 := 10;
    if test1 == 10 then 
    begin
      test1 := 0
    end
    else
    begin
      continue
    end;
    exit when 3 == 3
  end;

  
  {TESTING ALL EXPRESSIONS}
  if (globalVar1 && true) || function1(true, true) != false || -3 <= 2 ||
    2 >= -4 || 3 < 4 || 5 > 6 || 2 * 5 == 10 || 2/3-4+1*2 % 2 == 0 then begin return end; 

  globalVar6 := 6.65;
  
  globalVar7 := 'a';
  
  globalVar8 := globalVar3;

  return
  
end;


begin
  main()
end
