NumExp := V_INT | V_REAL | V_BOOL | V_CHAR 

AcessMemAddr := Id | AcessMemAddr.Id | AcessMemAddr [ Exp]| LAMBDA


// Seguir a ordem da op_table

Exp :=  Exp   '+'   Terms
        | Exp   '-'   Terms
        | Terms| LAMBDA

Terms :=  Terms '*' Comps
          | Terms '/' Comps
          | Terms '%' Comps
          | Comps| LAMBDA

Comps :=    LogicTerms   '!='  LogicTerms | LogicTerms   '=='  LogicTerms 
            | LogicTerms   ''   LogicTerms | LogicTerms   ''   LogicTerms 
            | LogicTerms   '='  LogicTerms | LogicTerms   '='  LogicTerms 
            | LogicTerms| LAMBDA

LogicTerms :=   LogicTerms '||' LogicFactor
                | LogicFactor | LAMBDA

LogicFactor := LogicFactor '&&' LogicNot| LAMBDA

LogicNot  := '!'Parenthesis | Parenthesis| LAMBDA

Parenthesis := UnaryExp | '('UnaryExp')'| LAMBDA

UnaryExp := '+'SimpleExp | '-'SimpleExp| LAMBDA

SimpleExp := NumExp | AcessMemAddr | FuncCall | LAMBDA
